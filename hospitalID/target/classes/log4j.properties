### Afecta a todos os loggers ###
### Por defecto, sacar só erros fatais e redirixilos a stdout

log4j.rootLogger=fatal, stdout  

### Nivel para o logger 'hospital'
### Para usar este logger no código, definir a seguinte variable:  	
###            static Logger log = Logger.getLogger("hospital");
### Despois:   log.info("hola); log.debug("Hola");

log4j.logger.hospital=info

### Nivel para o logger hibernate.org e springframework.org

log4j.logger.org.hibernate=error





#stdout: asociámolo á consola #

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{dd/MM/yyyy HH:mm:ss}] [%p - %c{2}]  %m%n

### Para dirixir mensaxes a un ficheiro ###
#log4j.appender.ARCHIVO=org.apache.log4j.FileAppender
#log4j.appender.ARCHIVO.File=blogs.log
#log4j.appender.ARCHIVO.layout=org.apache.log4j.PatternLayout
#log4j.appender.ARCHIVO.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n



# (Extraido de http://es.wikipedia.org/wiki/Log4j )

# Niveles de prioridad de los mensajes
# Por defecto Log4J tiene 6 niveles de prioridad para los mensajes (trace, debug, info, warn, error, fatal). Además existen otros dos niveles extras (all y off):

# Niveles de prioridad (De menor a mayor - detalle-):

# OFF: este es el nivel de mínimo detalle, deshabilita todos los logs.
# FATAL: se utiliza para mensajes críticos del sistema, generalmente después de guardar el mensaje el programa abortará.
# ERROR: se utiliza en mensajes de error de la aplicación que se desea guardar, estos eventos afectan al programa pero lo dejan seguir funcionando, como por ejemplo que algún parámetro de configuración no es correcto y se carga el parámetro por defecto.
# WARN: se utiliza para mensajes de alerta sobre eventos que se desea mantener constancia, pero que no afectan al correcto funcionamiento del programa.
# INFO: se utiliza para mensajes similares al modo "verbose" en otras aplicaciones.
# DEBUG: se utiliza para escribir mensajes de depuración. Este nivel no debe estar activado cuando la aplicación se encuentre en producción.
# TRACE: se utiliza para mostrar mensajes con un mayor nivel de detalle que debug.
# ALL: este es el nivel de máximo detalle, habilita todos los logs (en general equivale a TRACE).